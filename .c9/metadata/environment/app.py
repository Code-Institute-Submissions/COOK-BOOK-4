{"changed":true,"filter":false,"title":"app.py","tooltip":"/app.py","value":"import os\nfrom flask import Flask, render_template, redirect, request, url_for, session, flash\nfrom flask_pymongo import PyMongo\nfrom bson.objectid import ObjectId\n\n\n\napp = Flask(__name__)\napp.secret_key =os.environ.get('SECRET_KEY')\n\napp.config[\"MONGO_DBNAME\"] ='COOK-BOOK'\napp.config[\"MONGO_URI\"]=os.environ.get('MONGO_URI')\n\nmongo = PyMongo(app)\n\n\n\n                \n\n\n#-------------Registration & Login-------------\n\n        \n@app.route('/')\ndef index():\n        return render_template('index.html')\n        \n                \n@app.route('/login', methods=['POST'])\ndef login():\n        users = mongo.db.users\n        login_user = users.find_one({'name': request.form['username']})\n        \n        if login_user:\n                if request.form['pass'] and login_user['password'] == login_user['password']:\n                        session['username'] = request.form['username']\n                        return redirect(url_for('find_recipes'))\n                        \n        return redirect(url_for('register'))\n        \n        \n        \n@app.route('/register', methods=['POST', 'GET'])\ndef register():\n        if request.method == 'POST':\n            users = mongo.db.users\n            existing_user = users.find_one({'name': request.form['username']})\n            \n            if existing_user is None:\n                    hashpass = request.form['pass']\n                    users.insert({'name': request.form['username'], 'password': hashpass})\n                    session['username'] = request.form['username']\n                    return redirect(url_for('index'))\n                    \n            return render_template('register.html')\n                \n        return render_template('register.html')\n        \n        \n@app.route('/logout')\ndef logout():\n        session.pop('username', None)\n        return redirect(url_for('index'))\n\n        \n        \n        \n        \n#-------------RECIPES-------------\n\n\n@app.route('/find_recipes')\ndef find_recipes():\n        \"\"\"Find Recipe Page\"\"\"\n        return render_template(\"recipes.html\", recipes=mongo.db.recipes.find(), categories=mongo.db.categories.find())\n                \n                \n@app.route('/add_recipe')\ndef add_recipe():\n        \"\"\"Add Recipe Page\"\"\"\n        all_categories = mongo.db.categories.find()\n        all_cuisines = mongo.db.cuisines.find()\n        return render_template('add_recipe.html', categories=all_categories, cuisines=all_cuisines)\n        \n        \n@app.route('/find_recipes/<category>')\ndef find_recipes_by_category(category):\n        \"\"\"Find Recipe By Category\"\"\"\n        return render_template(\"recipes.html\", recipes=mongo.db.recipes.find({\"category_name\":category}), categories=mongo.db.categories.find())\n\n  \n@app.route('/insert_recipe', methods=['POST'])\ndef insert_recipe():\n        \"\"\"Enable To Add Recipe And Redirect To Recipe Page\"\"\"\n        recipes=mongo.db.recipes\n        recipes.insert_one(request.form.to_dict())\n        return redirect(url_for('find_recipes'))\n\n  \n@app.route('/view_recipe/<recipe_id>')\ndef view_recipe(recipe_id):\n        \"\"\"Enable To View Particular Recipe\"\"\"\n        recipes =  mongo.db.recipes\n        my_recipe =  mongo.db.recipes.find_one({\"_id\": ObjectId(recipe_id)})\n        return render_template('view_recipe.html', recipe=my_recipe)\n\n  \n@app.route('/edit_recipe/<recipe_id>')\ndef edit_recipe(recipe_id):\n        \"\"\"Enable To Edit Particular Recipe\"\"\"\n        this_recipe = mongo.db.recipes.find_one({\"_id\": ObjectId(recipe_id)})\n        all_categories = mongo.db.categories.find()\n        all_cuisines = mongo.db.cuisines.find()\n        return render_template('edit_recipe.html', recipe=this_recipe,\n                            categories=all_categories, cuisines=all_cuisines)\n                            \n\n@app.route('/update_recipe/<recipe_id>', methods= ['POST'])\ndef update_recipe(recipe_id):\n        \"\"\"Enable To Update Recipe And Redirect To Recipe Page\"\"\"\n        recipes=mongo.db.recipes\n        recipes.update({\"_id\": ObjectId(recipe_id)},\n  \n        { \n        'category_name': request.form.get('category_name'),\n        'recipe_name': request.form.get('recipe_name'), \n        'recipe_ingredients': request.form.get('recipe_ingredients'),\n        'recipe_method': request.form.get('recipe_method'),\n        'recipe_description': request.form.get('recipe_description'),\n        'preparation_time': request.form.get('preparation_time'),\n        'recipe_servings': request.form.get('recipe_servings'),\n        'cuisine_name': request.form.get('cuisine_name'),\n        'cooking_time': request.form.get('cooking_time'),\n        'name': request.form.get('name')\n        })\n    \n        return redirect(url_for('find_recipes'))\n\n  \n@app.route('/delete_recipe/<recipe_id>')\ndef delete_recipe(recipe_id):\n        \"\"\"Enable To Delete Particular Recipe\"\"\"\n        mongo.db.recipes.remove({'_id': ObjectId(recipe_id)})\n        return redirect(url_for('find_recipes'))\n  \n\n\n\n\n  \n\n\n  \n\n#-------CATEGORIES--------\n\n@app.route('/find_categories')\ndef find_categories():\n        \"\"\"Find Categories Page\"\"\"\n        return render_template('categories.html', categories=mongo.db.categories.find())\n\n\n@app.route('/new_category')\ndef new_category():\n        \"\"\"Add Category Page\"\"\"\n        return render_template('add_category.html')\n\n\n@app.route('/add_category', methods=['POST'])\ndef add_category():\n        \"\"\"Enable To Add Category And Redirect To Categories Page\"\"\"\n        my_category = {'category_name': request.form.get('category_name')}\n        mongo.db.categories.insert_one(my_category)\n        return redirect(url_for('find_categories'))\n\n\n@app.route('/edit_category/<category_id>')\ndef edit_category(category_id):\n        \"\"\"Edit Category Page\"\"\"\n        return render_template('edit_category.html', category=mongo.db.categories.find_one({'_id': ObjectId(category_id)}))\n\n  \n@app.route('/update_category/<category_id>', methods=['POST'])\ndef update_category(category_id):\n        \"\"\"Enable To Update Category And Redirect To Cateories Page\"\"\"\n        mongo.db.categories.update({'_id': ObjectId(category_id)}, {'category_name': request.form.get('category_name')})\n        return redirect(url_for('find_categories'))\n  \n\n\n\n\n\n\n  \n#-------Cuisines---------\n\n@app.route('/find_cuisines')\ndef find_cuisines():\n        \"\"\"Cuisines Page\"\"\"\n        return render_template('cuisines.html', cuisines=mongo.db.cuisines.find())\n\n\n@app.route('/edit_cuisine/<cuisine_id>')\ndef edit_cuisine(cuisine_id):\n        \"\"\"Enable Edit Cuisine Page\"\"\"\n        return render_template('edit_cuisine.html', cuisine=mongo.db.cuisines.find_one({'_id': ObjectId(cuisine_id)}))\n\n\n@app.route('/add_cuisine')\ndef add_cuisine():\n        \"\"\"Add Cuisine Page\"\"\"\n        return render_template('add_cuisine.html')\n\n\n@app.route('/new_cuisine', methods=['POST'])\ndef new_cuisine():\n        \"\"\"Enable To Add New Cusine And Redirect To Cusines Page\"\"\"\n        my_cuisine = {'cuisine_name': request.form.get('cuisine_name')}\n        mongo.db.cuisines.insert_one(my_cuisine)\n        return redirect(url_for('find_cuisines'))\n\n\n@app.route('/update_cuisine/<cuisine_id>', methods=['POST'])\ndef update_cuisine(cuisine_id):\n        \"\"\"Enable To Update Cuisine And Redirect To Cuisines Page\"\"\" \n        mongo.db.cuisines.update({'_id': ObjectId(cuisine_id)}, {'cuisine_name': request.form.get('cuisine_name')})\n        return redirect(url_for('find_cuisines'))\n\n\n\nif __name__ == '__main__':\n        app.run(host=os.environ.get('IP'),\n        port=int(os.environ.get('PORT')),\n        debug=True)  \n  \n\n        ","undoManager":{"mark":-2,"position":0,"stack":[[{"start":{"row":6,"column":0},"end":{"row":7,"column":13},"action":"remove","lines":["from dotenv import load_dotenv","load_dotenv()"],"id":2},{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"remove","lines":["",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":5,"column":0},"end":{"row":5,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1568393129970}